syntax = "proto3";

message ExchangesRequest {
}

message ExchangesResponse {
  repeated string exchanges = 1;
}

message MarketsRequest {
  required string exchange = 1;
}

message MarketsResponse {
  repeated string markets = 1;
}

message CandlesRequest {
  required string exchange = 1;
  required string market = 2;
  required string timeframe = 3;
}

message CandlesResponse {
  repeated Candle candles = 1;
}

message Candle {
  required uint64 timestamp = 1;
  required double o = 2;
  required double h = 3;
  required double l = 4;
  required double c = 5;
  required double v = 6;
}

message TestRequest {
  string a = 1;
}

message TestResponse {
  int64 a = 1;
  int64 b = 2;
}

service DexterData {
  rpc SupportedExchanges (ExchangesRequest) returns (ExchangesResponse) {}
  rpc SupportedMarkets (MarketsRequest) returns (MarketsResponse) {}
  rpc GetCandles (CandlesRequest) returns (CandlesResponse) {}
  rpc StreamCandles (CandlesRequest) returns (stream Candle) {}
  rpc Test (TestRequest) returns (TestResponse) {}
}

